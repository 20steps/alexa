fos_http_cache:
  cache_control:
    rules:
      # Search REST Calls
      -
        match:
          attributes:
            _route: ^bricks.custom.twentysteps_alexda.api.alexa.process
          match_response: response.getStatusCode() == 200
        headers:
          cache_control: { private: true, public: false, max_age: 0, s_maxage: 0 }
          etag: false
          vary: [Accept-Encoding]
      # Content REST Calls
      -
        match:
          attributes:
            _route: ^(bricks.custom.twentysteps_alexa.content.page|bricks.custom.twentysteps_alexa.content.post|bricks.basic.pages.api.content.findNodesByType|bricks.basic.pages.api.content.findNodeByTypeAndSelector|bricks.basic.pages.api.content.findPostsByTags|bricks.basic.pages.api.content.findNodesByTypeAndTaxonomy)
          match_response: response.getStatusCode() == 200
        headers:
          cache_control: { private: false, public: true, max_age: 3600, s_maxage: 3600 }
          etag: false
          vary: [Accept-Encoding]
      # Authenticated REST Calls
      -
        match:
          attributes:
            _route: authenticated
        headers:
          overwrite: true
          cache_control: { private: true, public: false, max_age: 0, s_maxage: 0 }
          etag: false
          vary: [Accept-Encoding]
      # Signin REST Calls
      -
        match:
          attributes:
            _route: signin
        headers:
          cache_control: { private: true, public: false, max_age: 0, s_maxage: 0 }
          etag: false
          vary: [Accept-Encoding]
      # Admin REST Calls
      -
        match:
          attributes:
            _route: admin
        headers:
          cache_control: { private: true, public: false, max_age: 0, s_maxage: 0 }
          etag: false
          vary: [Accept-Encoding]
      # Catch all -> do not cache
      -
        match:
          path: ^/
        headers:
          cache_control: { private: true, public: false, max_age: 0, s_maxage: 0 }
          etag: false
          vary: [Accept-Encoding]