parameters:

services:

    # Brick Shell

    bricks.custom.twentysteps_alexa.shell:
        class: Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\Shell\AlexaShell
        arguments: [  '@service_container', '@logger', '@?debug.stopwatch']
        tags:
            - { name: monolog.logger, channel: "bricks.custom.twentysteps_alexa.shell" }
            - { name: twentysteps.bricks.shell, alias: twentysteps_alexa, integrated_kernel: true }
        calls:
            - [ injectModule, [ '@bricks.custom.twentysteps_alexa.module.alexa' ] ]
            - [ injectModule, [ '@bricks.custom.twentysteps_alexa.module.uptime_robot' ] ]
            - [ injectModule, [ '@bricks.custom.twentysteps_alexa.module.user' ] ]
            - [ injectModule, [ '@bricks.custom.twentysteps_alexa.module.mail' ] ]
    twentysteps_alexa: "@bricks.custom.twentysteps_alexa.shell"


    # Brick Shell Modules (business logic)

    bricks.custom.twentysteps_alexa.module.alexa:
        class: Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\Modules\AlexaModule
        arguments: [ '@doctrine.orm.entity_manager', '@logger']
        tags:
            - { name: monolog.logger, channel: "bricks.custom.twentysteps_alexa.module.alexa" }

    bricks.custom.twentysteps_alexa.module.uptime_robot:
        class: Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\Modules\UptimeRobotModule
        arguments: [ '@twentysteps_commons.uptime_robot.api', '@logger']
        tags:
            - { name: monolog.logger, channel: "bricks.custom.twentysteps_alexa.module.uptime_robot" }


    bricks.custom.twentysteps_alexa.module.user:
        class: Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\Modules\UserModule
        arguments: [
          '@doctrine.orm.entity_manager',
          '@request_stack',
          '@event_dispatcher',
          '@bricks.custom.twentysteps_alexa.user_manager',
          '@security.token_storage',
          '@security.authorization_checker',
          '@gesdinet.jwtrefreshtoken.refresh_token_manager',
          '@snc_redis.twentysteps_alexa',
          '@lexik_jwt_authentication.jwt_encoder',
          '@liip_imagine.cache.manager',
          '%bricks_custom_twentysteps_alexa_upload_user_avatar_directory%',
          '%bricks_custom_twentysteps_alexa_user_avatar_path%',
          '@translator',
          '@twig',
          '@swiftmailer.mailer.twentysteps_alexa_signin',
          '%bricks_custom_twentysteps_alexa_signin_mailer_from_email%',
          '%bricks_custom_twentysteps_alexa_signin_mailer_from_name%',
          '%bricks_custom_twentysteps_alexa_signin_mailer_reply_to%',
          '%bricks_custom_twentysteps_alexa_signin_mailer_allow_multipart%',
          '%bricks_custom_twentysteps_alexa_protocol%',
          '%bricks_custom_twentysteps_alexa_host%',
          '%bricks_custom_twentysteps_alexa_activation_token_validity%',
          '%bricks_custom_twentysteps_alexa_reset_password_token_validity%',
          '%bricks_custom_twentysteps_alexa_mailers_bcc%',
          '%bricks_custom_twentysteps_alexa_mailers_bcc_dev%',
          '@business',
          '@logger' ]
        tags:
            - { name: monolog.logger, channel: "bricks.custom.twentysteps_alexa.module.user" }


    bricks.custom.twentysteps_alexa.module.mail:
        class: Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\Modules\MailModule
        arguments: [
          '@twig',
          '@pages',
          '@swiftmailer.mailer.twentysteps_alexa',
          '%bricks_custom_twentysteps_alexa_mailer_user%',
          '%bricks_custom_twentysteps_alexa_mailer_from_mail%',
          '%bricks_custom_twentysteps_alexa_mailer_from_name%',
          '%bricks_custom_twentysteps_alexa_mailer_reply_to%',
          '%bricks_custom_twentysteps_alexa_mailers_bcc%',
          '%bricks_custom_twentysteps_alexa_mailers_bcc_dev%',
          '%bricks_custom_twentysteps_alexa_host%',
          '%bricks_custom_twentysteps_alexa_protocol%',
          '@event_dispatcher',
          '@logger' ]
        tags:
            - { name: monolog.logger, channel: "bricks.custom.twentysteps_alexa.module.mail" }


    # Security

    bricks.custom.twentysteps_alexa.security.voter.resource_action:
        class: Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\Security\Voter\ResourceActionVoter
        arguments: [ '@service_container', '@security.access.decision_manager' ]
        public: false
        tags:
            - { name: security.voter }


    # User manager and provider

    bricks.custom.twentysteps_alexa.user_manager:
        class: FOS\UserBundle\Doctrine\UserManager
        arguments: [ '@fos_user.util.password_updater', '@fos_user.util.canonical_fields_updater', '@fos_user.object_manager', 'Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\Entity\User' ]

    bricks.custom.twentysteps_alexa.user_provider:
        class: FOS\UserBundle\Security\EmailUserProvider
        arguments: ['@bricks.custom.twentysteps_alexa.user_manager']


    # JWT

    bricks.custom.twentysteps_alexa.jwt.authentication_success:
        class: Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\JWT\AuthenticationSuccessHandler
        arguments: [ '@lexik_jwt_authentication.jwt_manager', '@event_dispatcher', '@core', '@doctrine.orm.entity_manager', '@jms_serializer', '@bricks.custom.twentysteps_alexa.serialization.serialization_exclusion', '@business' ]
        tags:
            - { name: monolog.logger, channel: "security" }


    # Foundlets (for search)

    bricks.custom.twentysteps_alexa.foundlet.page:
        class: Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\Foundlet\PageFoundlet
        arguments: [  '@bricks.custom.twentysteps_alexa.shell', '@logger', '@pages'  ]
        tags:
            - { name: monolog.logger, channel: "bricks.custom.twentysteps_alexa.foundlet.page" }
            - { name: twentysteps.bricks.foundlet, alias: 'page' }

    bricks.custom.twentysteps_alexa.foundlet.post:
        class: Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\Foundlet\PostFoundlet
        arguments: [  '@bricks.custom.twentysteps_alexa.shell', '@logger', '@pages'  ]
        tags:
            - { name: monolog.logger, channel: "bricks.custom.twentysteps_alexa.foundlet.post" }
            - { name: twentysteps.bricks.foundlet, alias: 'post' }


    # Fixtures providers for custom data generation

    bricks.custom.twentysteps_alexa.push.data_fixtures.provider:
        class: Bricks\Custom\Twentysteps\AlexaBrick\AlexaBundle\DataFixtures\Provider
        arguments: [ '@faker.generator', '@libphonenumber.phone_number_util', '@libphonenumber.phone_number_offline_geocoder', '@libphonenumber.phone_number_to_time_zones_mapper' ]
        tags:
          - { name: hautelook_alice.faker.provider }

imports:
    - resource: ../../Entity/filter.yml

